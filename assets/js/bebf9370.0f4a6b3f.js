"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[485],{51:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"advanced-topics/troubleshooting","title":"Troubleshooting Orkestra Applications","description":"This guide covers common issues you might encounter while developing with Orkestra and provides solutions based on real-world scenarios. The troubleshooting tips are organized by component and error type.","source":"@site/docs/advanced-topics/troubleshooting.md","sourceDirName":"advanced-topics","slug":"/advanced-topics/troubleshooting","permalink":"/docs/advanced-topics/troubleshooting","draft":false,"unlisted":false,"editUrl":"https://github.com/Luc-cpl/orkestra/tree/main/docs/docs/advanced-topics/troubleshooting.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4},"sidebar":"tutorialSidebar","previous":{"title":"Testing Orkestra Applications","permalink":"/docs/advanced-topics/testing"}}');var s=i(4848),o=i(8453);const r={sidebar_position:4},l="Troubleshooting Orkestra Applications",d={},a=[{value:"Container-Related Issues",id:"container-related-issues",level:2},{value:"<code>NotFoundExceptionInterface</code>",id:"notfoundexceptioninterface",level:3},{value:"<code>InvalidArgumentException</code> (Binding Non-Closures)",id:"invalidargumentexception-binding-non-closures",level:3},{value:"<code>InvalidArgumentException</code> (Non-Existent Provider Class)",id:"invalidargumentexception-non-existent-provider-class",level:3},{value:"<code>InvalidArgumentException</code> (Invalid Provider Class)",id:"invalidargumentexception-invalid-provider-class",level:3},{value:"<code>Exception</code> (Double Boot)",id:"exception-double-boot",level:3},{value:"<code>BadMethodCallException</code> (Accessing Container Before Boot)",id:"badmethodcallexception-accessing-container-before-boot",level:3},{value:"AppBind-Related Issues",id:"appbind-related-issues",level:2},{value:"<code>Exception</code> (Non-Existent Class)",id:"exception-non-existent-class",level:3},{value:"<code>Exception</code> (Method and Property Calls on Non-Class Binds)",id:"exception-method-and-property-calls-on-non-class-binds",level:3},{value:"Configuration-Related Issues",id:"configuration-related-issues",level:2},{value:"<code>InvalidArgumentException</code> (Undefined Configuration Key)",id:"invalidargumentexception-undefined-configuration-key",level:3},{value:"<code>InvalidArgumentException</code> (Required Configuration Key)",id:"invalidargumentexception-required-configuration-key",level:3},{value:"<code>InvalidArgumentException</code> (Validation Failures)",id:"invalidargumentexception-validation-failures",level:3},{value:"<code>InvalidArgumentException</code> (Invalid Validation Configuration)",id:"invalidargumentexception-invalid-validation-configuration",level:3},{value:"<code>InvalidArgumentException</code> (Invalid Definition Configuration)",id:"invalidargumentexception-invalid-definition-configuration",level:3},{value:"Application Configuration Issues",id:"application-configuration-issues",level:2},{value:"<code>InvalidArgumentException</code> (Invalid Environment)",id:"invalidargumentexception-invalid-environment",level:3},{value:"<code>InvalidArgumentException</code> (Invalid Root Path)",id:"invalidargumentexception-invalid-root-path",level:3},{value:"<code>InvalidArgumentException</code> (Invalid Slug)",id:"invalidargumentexception-invalid-slug",level:3},{value:"Debugging Techniques",id:"debugging-techniques",level:2},{value:"Using Test Cases for Debugging",id:"using-test-cases-for-debugging",level:3},{value:"Inspecting Container State",id:"inspecting-container-state",level:3},{value:"Configuration Debugging",id:"configuration-debugging",level:3},{value:"Performance Issues",id:"performance-issues",level:2},{value:"Container Resolution Performance",id:"container-resolution-performance",level:3},{value:"Memory Leaks",id:"memory-leaks",level:3},{value:"Common Error Patterns and Their Solutions",id:"common-error-patterns-and-their-solutions",level:2},{value:"Related Topics",id:"related-topics",level:2}];function c(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"troubleshooting-orkestra-applications",children:"Troubleshooting Orkestra Applications"})}),"\n",(0,s.jsx)(n.p,{children:"This guide covers common issues you might encounter while developing with Orkestra and provides solutions based on real-world scenarios. The troubleshooting tips are organized by component and error type."}),"\n",(0,s.jsx)(n.h2,{id:"container-related-issues",children:"Container-Related Issues"}),"\n",(0,s.jsx)(n.h3,{id:"notfoundexceptioninterface",children:(0,s.jsx)(n.code,{children:"NotFoundExceptionInterface"})}),"\n",(0,s.jsx)(n.p,{children:"This exception is thrown when attempting to retrieve a service that doesn't exist in the container."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"// This will throw NotFoundExceptionInterface if 'nonExistentKey' isn't registered\n$app->get('nonExistentKey');\n"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Important"}),": The examples in this guide use the ",(0,s.jsx)(n.code,{children:"$app"})," variable to represent an Orkestra App instance. The ",(0,s.jsx)(n.code,{children:"app()"})," function is only available in the testing environment and should not be used in your actual application code."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Solution:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Check that the service is properly registered in a service provider"}),"\n",(0,s.jsx)(n.li,{children:"Ensure the provider is registered in your application configuration"}),"\n",(0,s.jsxs)(n.li,{children:["Use ",(0,s.jsx)(n.code,{children:"$app->has('service')"})," to check if a service exists before attempting to retrieve it"]}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"invalidargumentexception-binding-non-closures",children:[(0,s.jsx)(n.code,{children:"InvalidArgumentException"})," (Binding Non-Closures)"]}),"\n",(0,s.jsx)(n.p,{children:"This exception is thrown when attempting to bind a value that is not a closure:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"// This will throw InvalidArgumentException\n$app->bind('test', 'testValue');\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Solution:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Always bind closures to the container:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"$app->bind('test', fn() => 'testValue');\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"invalidargumentexception-non-existent-provider-class",children:[(0,s.jsx)(n.code,{children:"InvalidArgumentException"})," (Non-Existent Provider Class)"]}),"\n",(0,s.jsx)(n.p,{children:"This exception is thrown when attempting to register a provider class that doesn't exist:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"// This will throw InvalidArgumentException\n$app->provider('NonExistentProviderClass');\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Solution:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Make sure the provider class exists and is properly imported"}),"\n",(0,s.jsx)(n.li,{children:"Check namespace and class name for typos"}),"\n",(0,s.jsx)(n.li,{children:"Verify autoloading configuration"}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"invalidargumentexception-invalid-provider-class",children:[(0,s.jsx)(n.code,{children:"InvalidArgumentException"})," (Invalid Provider Class)"]}),"\n",(0,s.jsxs)(n.p,{children:["This exception is thrown when attempting to register a class that doesn't implement ",(0,s.jsx)(n.code,{children:"ProviderInterface"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"// This will throw InvalidArgumentException\n$nonProviderClass = new class () {};\n$app->provider($nonProviderClass::class);\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Solution:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Ensure the class implements the ",(0,s.jsx)(n.code,{children:"ProviderInterface"})]}),"\n",(0,s.jsxs)(n.li,{children:["Make sure both ",(0,s.jsx)(n.code,{children:"register()"})," and ",(0,s.jsx)(n.code,{children:"boot()"})," methods are properly implemented"]}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"exception-double-boot",children:[(0,s.jsx)(n.code,{children:"Exception"})," (Double Boot)"]}),"\n",(0,s.jsx)(n.p,{children:"This exception is thrown when attempting to boot an application that has already been booted:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"// This will throw Exception\n$app->boot();\n$app->boot();\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Solution:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Only call ",(0,s.jsx)(n.code,{children:"boot()"})," once in your application lifecycle"]}),"\n",(0,s.jsx)(n.li,{children:"If you need to check if the application is booted, use a condition to prevent multiple boots"}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"badmethodcallexception-accessing-container-before-boot",children:[(0,s.jsx)(n.code,{children:"BadMethodCallException"})," (Accessing Container Before Boot)"]}),"\n",(0,s.jsx)(n.p,{children:"This exception is thrown when attempting to retrieve services from the container before the application is booted:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"// This will throw BadMethodCallException\n$app = new App(new Configuration());\n$app->get('test');\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Solution:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Always boot the application before accessing the container:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"$app = new App(new Configuration());\n$app->boot();\n$app->get('test');\n"})}),"\n",(0,s.jsx)(n.h2,{id:"appbind-related-issues",children:"AppBind-Related Issues"}),"\n",(0,s.jsxs)(n.h3,{id:"exception-non-existent-class",children:[(0,s.jsx)(n.code,{children:"Exception"})," (Non-Existent Class)"]}),"\n",(0,s.jsxs)(n.p,{children:["This exception is thrown when attempting to create an ",(0,s.jsx)(n.code,{children:"AppBind"})," with a non-existent class:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"// This will throw Exception\nnew AppBind('test', 'NonExistentClass');\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Solution:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Check that the class exists and is properly imported"}),"\n",(0,s.jsx)(n.li,{children:"Verify class name and namespace for typos"}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"exception-method-and-property-calls-on-non-class-binds",children:[(0,s.jsx)(n.code,{children:"Exception"})," (Method and Property Calls on Non-Class Binds)"]}),"\n",(0,s.jsxs)(n.p,{children:["These exceptions are thrown when attempting to use methods like ",(0,s.jsx)(n.code,{children:"constructor()"}),", ",(0,s.jsx)(n.code,{children:"property()"}),", or ",(0,s.jsx)(n.code,{children:"method()"})," on a bind that is a closure rather than a class:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"// This will throw Exception\n$bind = new AppBind('test', fn () => true);\n$bind->constructor('testValue1');\n\n// This will throw Exception\n$bind = new AppBind('test', fn () => true);\n$bind->property('testProperty', 'testValue');\n\n// This will throw Exception\n$bind = new AppBind('test', fn () => true);\n$bind->method('testMethod', 'testValue1', 'testValue2');\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Solution:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Only use these methods with class binds, not closures"}),"\n",(0,s.jsx)(n.li,{children:"If you need to configure a service, use a class bind instead of a closure"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"configuration-related-issues",children:"Configuration-Related Issues"}),"\n",(0,s.jsxs)(n.h3,{id:"invalidargumentexception-undefined-configuration-key",children:[(0,s.jsx)(n.code,{children:"InvalidArgumentException"})," (Undefined Configuration Key)"]}),"\n",(0,s.jsx)(n.p,{children:"This exception is thrown when attempting to retrieve a configuration key that doesn't exist:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"// This will throw InvalidArgumentException\n$config = new Configuration([]);\n$config->get('undefinedKey');\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Solution:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Check if the key exists before getting it:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"if ($config->has('key')) {\n    $value = $config->get('key');\n}\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Provide default values in your configuration definitions"}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"invalidargumentexception-required-configuration-key",children:[(0,s.jsx)(n.code,{children:"InvalidArgumentException"})," (Required Configuration Key)"]}),"\n",(0,s.jsx)(n.p,{children:"This exception is thrown when attempting to get a required configuration key that is not set:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"// This will throw InvalidArgumentException\n$config = new Configuration([\n    'definition' => [\n        'requiredKey' => ['description', null],\n    ],\n]);\n$config->get('requiredKey');\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Solution:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Always set required configuration keys before attempting to retrieve them"}),"\n",(0,s.jsx)(n.li,{children:"Use environment variables or configuration files to provide values for required keys"}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"invalidargumentexception-validation-failures",children:[(0,s.jsx)(n.code,{children:"InvalidArgumentException"})," (Validation Failures)"]}),"\n",(0,s.jsx)(n.p,{children:"This exception is thrown when configuration values fail validation:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"// This will throw InvalidArgumentException\n$config = new Configuration([\n    'key' => 'invalidValue',\n    'definition' => [\n        'key' => ['description', 'validValue'],\n    ],\n    'validation' => [\n        'key' => fn ($value) => $value === 'validValue',\n    ],\n]);\n$config->validate();\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Solution:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Ensure all configuration values meet their validation requirements"}),"\n",(0,s.jsx)(n.li,{children:"Check validation rules for logical errors"}),"\n",(0,s.jsx)(n.li,{children:"Use debugging techniques to identify which validation is failing"}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"invalidargumentexception-invalid-validation-configuration",children:[(0,s.jsx)(n.code,{children:"InvalidArgumentException"})," (Invalid Validation Configuration)"]}),"\n",(0,s.jsx)(n.p,{children:"This exception is thrown when setting invalid validation handlers:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"// These will all throw InvalidArgumentException\n$config->set('validation', 'invalidValidator');\n$config->set('validation', ['key' => 'invalidValidator']);\n$config->set('validation', [fn () => true]); // Missing key\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Solution:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Ensure validation handlers are arrays of key-function pairs:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"$config->set('validation', [\n    'key' => fn ($value) => true // Valid validator\n]);\n"})}),"\n",(0,s.jsxs)(n.h3,{id:"invalidargumentexception-invalid-definition-configuration",children:[(0,s.jsx)(n.code,{children:"InvalidArgumentException"})," (Invalid Definition Configuration)"]}),"\n",(0,s.jsx)(n.p,{children:"This exception is thrown when setting invalid definition structures:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"// These will all throw InvalidArgumentException\n$config->set('definition', 'invalidDefinition');\n$config->set('definition', ['key' => []]); // Empty definition\n$config->set('definition', ['key' => ['description', 'default', 'invalid extra']]); // Too many elements\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Solution:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Ensure definitions follow the correct format:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"$config->set('definition', [\n    'key' => ['Description', 'default'] // Valid definition\n]);\n"})}),"\n",(0,s.jsx)(n.h2,{id:"application-configuration-issues",children:"Application Configuration Issues"}),"\n",(0,s.jsxs)(n.h3,{id:"invalidargumentexception-invalid-environment",children:[(0,s.jsx)(n.code,{children:"InvalidArgumentException"})," (Invalid Environment)"]}),"\n",(0,s.jsx)(n.p,{children:"This exception is thrown when attempting to boot with an invalid environment:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"// This will throw InvalidArgumentException\n$app->config()->set('env', 'invalidEnv');\n$app->boot();\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Solution:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Use a valid environment name (e.g., 'development', 'production', 'testing')"}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"invalidargumentexception-invalid-root-path",children:[(0,s.jsx)(n.code,{children:"InvalidArgumentException"})," (Invalid Root Path)"]}),"\n",(0,s.jsx)(n.p,{children:"This exception is thrown when attempting to boot with an invalid root path:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"// This will throw InvalidArgumentException\n$app->config()->set('root', 'invalidRoot');\n$app->boot();\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Solution:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Set a valid directory path as the root"}),"\n",(0,s.jsx)(n.li,{children:"Ensure the path exists and is readable"}),"\n"]}),"\n",(0,s.jsxs)(n.h3,{id:"invalidargumentexception-invalid-slug",children:[(0,s.jsx)(n.code,{children:"InvalidArgumentException"})," (Invalid Slug)"]}),"\n",(0,s.jsx)(n.p,{children:"This exception is thrown when attempting to boot with an invalid slug format:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"// This will throw InvalidArgumentException\n$app->config()->set('slug', 'invalid slug!');\n$app->boot();\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Solution:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Use a valid slug format (alphanumeric characters, hyphens, or underscores)"}),"\n",(0,s.jsx)(n.li,{children:"Avoid spaces and special characters in your slug"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"debugging-techniques",children:"Debugging Techniques"}),"\n",(0,s.jsx)(n.h3,{id:"using-test-cases-for-debugging",children:"Using Test Cases for Debugging"}),"\n",(0,s.jsx)(n.p,{children:"The test suite provides valuable examples of expected behavior and common error cases. Use these as reference when debugging:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"// From AppTest.php - Valid slug test\ntest('can get slug', function () {\n    $app = app(); // Note: app() is only used in tests\n    expect($app->slug())->toEqual('app');\n    $app->config()->set('slug', 'testSlug');\n    expect($app->slug())->toEqual('testSlug');\n});\n"})}),"\n",(0,s.jsx)(n.h3,{id:"inspecting-container-state",children:"Inspecting Container State"}),"\n",(0,s.jsx)(n.p,{children:"Inspect the state of the container to debug service registration issues:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"// Check if a service exists\nvar_dump($app->has('service_name'));\n\n// Dump all registered services (if using PHP-DI directly)\nvar_dump($app->getContainer()->getKnownEntryNames());\n"})}),"\n",(0,s.jsx)(n.h3,{id:"configuration-debugging",children:"Configuration Debugging"}),"\n",(0,s.jsx)(n.p,{children:"Dump the current configuration state to identify issues:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"// Display all configuration values\nvar_dump($app->config());\n\n// Check specific configuration value\nvar_dump($app->config()->get('key'));\n"})}),"\n",(0,s.jsx)(n.h2,{id:"performance-issues",children:"Performance Issues"}),"\n",(0,s.jsx)(n.h3,{id:"container-resolution-performance",children:"Container Resolution Performance"}),"\n",(0,s.jsx)(n.p,{children:"If you encounter performance issues with container resolution:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Use singleton services for frequently accessed services"}),"\n",(0,s.jsx)(n.li,{children:"Consider eager loading critical services during boot"}),"\n",(0,s.jsx)(n.li,{children:"Profile the application to identify slow service resolutions"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"memory-leaks",children:"Memory Leaks"}),"\n",(0,s.jsx)(n.p,{children:"If your application experiences memory leaks:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Check for circular references in your service definitions"}),"\n",(0,s.jsx)(n.li,{children:"Ensure proper cleanup of resources in long-running processes"}),"\n",(0,s.jsx)(n.li,{children:"Use weak references for event listeners and observers"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"common-error-patterns-and-their-solutions",children:"Common Error Patterns and Their Solutions"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Error Pattern"}),(0,s.jsx)(n.th,{children:"Symptom"}),(0,s.jsx)(n.th,{children:"Solution"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Missing Service"}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"NotFoundExceptionInterface"})," when calling ",(0,s.jsx)(n.code,{children:"$app->get()"})]}),(0,s.jsx)(n.td,{children:"Register the service in a provider"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Invalid Binding"}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"InvalidArgumentException"})," when calling ",(0,s.jsx)(n.code,{children:"$app->bind()"})]}),(0,s.jsx)(n.td,{children:"Use closures instead of values"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Configuration Validation"}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"InvalidArgumentException"})," during boot"]}),(0,s.jsx)(n.td,{children:"Ensure all required config values are set and valid"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Container Usage Before Boot"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"BadMethodCallException"})}),(0,s.jsx)(n.td,{children:"Always boot the app before accessing container"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Circular Dependencies"}),(0,s.jsx)(n.td,{children:"Infinite loop or stack overflow"}),(0,s.jsx)(n.td,{children:"Refactor dependencies, use factories or decorators"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Provider Registration"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"InvalidArgumentException"})}),(0,s.jsx)(n.td,{children:"Ensure provider class exists and implements the interface"})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"related-topics",children:"Related Topics"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/docs/advanced-topics/testing",children:"Testing Guide"})," - Learn how to test your Orkestra application"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/docs/core-concepts/dependency-injection",children:"Dependency Injection"})," - Understanding the container"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>l});var t=i(6540);const s={},o=t.createContext(s);function r(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);