"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[391],{2975:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>a,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"guides/routing","title":"Routing","description":"Orkestra provides a flexible and powerful routing system to handle HTTP requests and direct them to the appropriate controllers.","source":"@site/docs/guides/routing.md","sourceDirName":"guides","slug":"/guides/routing","permalink":"/docs/guides/routing","draft":false,"unlisted":false,"editUrl":"https://github.com/Luc-cpl/orkestra/tree/main/docs/docs/guides/routing.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"API Development","permalink":"/docs/guides/api"},"next":{"title":"Controllers","permalink":"/docs/guides/controllers"}}');var n=s(4848),o=s(8453);const l={sidebar_position:1},i="Routing",a={},d=[{value:"Basic Routing",id:"basic-routing",level:2},{value:"HTTP Methods",id:"http-methods",level:2},{value:"Route Parameters",id:"route-parameters",level:2},{value:"Optional Parameters",id:"optional-parameters",level:3},{value:"Parameter Validation",id:"parameter-validation",level:3},{value:"Route Groups",id:"route-groups",level:2},{value:"Middleware",id:"middleware",level:2},{value:"Best Practices",id:"best-practices",level:2}];function c(e){const r={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.header,{children:(0,n.jsx)(r.h1,{id:"routing",children:"Routing"})}),"\n",(0,n.jsx)(r.p,{children:"Orkestra provides a flexible and powerful routing system to handle HTTP requests and direct them to the appropriate controllers."}),"\n",(0,n.jsx)(r.h2,{id:"basic-routing",children:"Basic Routing"}),"\n",(0,n.jsxs)(r.p,{children:["Routes are defined in the ",(0,n.jsx)(r.code,{children:"config/routes.php"})," file using the router instance:"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-php",children:"use Orkestra\\Router;\n\nreturn function (Router $router) {\n    $router->get('/', HomeController::class);\n    $router->get('/users', UserListController::class);\n    $router->post('/users', CreateUserController::class);\n    $router->get('/users/{id}', UserDetailsController::class);\n    $router->put('/users/{id}', UpdateUserController::class);\n    $router->delete('/users/{id}', DeleteUserController::class);\n};\n"})}),"\n",(0,n.jsx)(r.h2,{id:"http-methods",children:"HTTP Methods"}),"\n",(0,n.jsx)(r.p,{children:"Orkestra supports all common HTTP methods:"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-php",children:"$router->get('/resource', ResourceController::class);\n$router->post('/resource', CreateResourceController::class);\n$router->put('/resource/{id}', UpdateResourceController::class);\n$router->patch('/resource/{id}', PatchResourceController::class);\n$router->delete('/resource/{id}', DeleteResourceController::class);\n$router->options('/resource', ResourceOptionsController::class);\n"})}),"\n",(0,n.jsx)(r.h2,{id:"route-parameters",children:"Route Parameters"}),"\n",(0,n.jsx)(r.p,{children:"Routes can include parameters, which are passed to the controller:"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-php",children:"$router->get('/users/{id}', function(ServerRequestInterface $request, array $params): ResponseInterface {\n    $userId = $params['id'];\n    // Process the request using $userId\n    return new Response();\n});\n"})}),"\n",(0,n.jsx)(r.h3,{id:"optional-parameters",children:"Optional Parameters"}),"\n",(0,n.jsxs)(r.p,{children:["You can define optional parameters using the ",(0,n.jsx)(r.code,{children:"?"})," modifier:"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-php",children:"$router->get('/users/{id?}', UserController::class);\n"})}),"\n",(0,n.jsx)(r.h3,{id:"parameter-validation",children:"Parameter Validation"}),"\n",(0,n.jsx)(r.p,{children:"You can validate parameters directly in route definitions:"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-php",children:"$router->get('/users/{id:[0-9]+}', UserController::class);\n$router->get('/articles/{slug:[a-z0-9\\-]+}', ArticleController::class);\n"})}),"\n",(0,n.jsx)(r.h2,{id:"route-groups",children:"Route Groups"}),"\n",(0,n.jsx)(r.p,{children:"Group related routes together:"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-php",children:"$router->group('/admin', function (Router $router) {\n    $router->get('/dashboard', AdminDashboardController::class);\n    $router->get('/users', AdminUsersController::class);\n    $router->get('/settings', AdminSettingsController::class);\n});\n"})}),"\n",(0,n.jsx)(r.h2,{id:"middleware",children:"Middleware"}),"\n",(0,n.jsx)(r.p,{children:"Apply middleware to routes:"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-php",children:"$router->get('/protected', ProtectedController::class)\n    ->middleware(AuthMiddleware::class);\n\n$router->group('/admin', function (Router $router) {\n    $router->get('/dashboard', AdminDashboardController::class);\n})->middleware([AuthMiddleware::class, AdminMiddleware::class]);\n"})}),"\n",(0,n.jsx)(r.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,n.jsxs)(r.ol,{children:["\n",(0,n.jsx)(r.li,{children:"Keep route definitions clean and organized"}),"\n",(0,n.jsx)(r.li,{children:"Use route groups for related endpoints"}),"\n",(0,n.jsx)(r.li,{children:"Apply middleware at the group level when possible"}),"\n",(0,n.jsx)(r.li,{children:"Validate route parameters when appropriate"}),"\n",(0,n.jsx)(r.li,{children:"Follow RESTful conventions for resource endpoints"}),"\n"]})]})}function u(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},8453:(e,r,s)=>{s.d(r,{R:()=>l,x:()=>i});var t=s(6540);const n={},o=t.createContext(n);function l(e){const r=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:l(e.components),t.createElement(o.Provider,{value:r},e.children)}}}]);