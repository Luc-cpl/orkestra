name: Check code quality and run tests

on:
  pull_request:
    types:
      - synchronize
      - opened
jobs:
  code-quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
          token: ${{ secrets.ACCESS_TOKEN }}

      - uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2

      - name: Cache Vendor
        id: cache-vendor
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-vendor-${{ hashFiles('**/composer.lock') }}

      - name: "Install Dependencies"
        if: steps.cache-vendor.outputs.cache-hit != 'true' # Skip if cache hit
        run: composer install -q --no-interaction --no-scripts

      - name: Cache Pint
        uses: actions/cache@v4
        with:
          path: ./storage/pint.cache
          key: ${{ runner.os }}-pint-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-pint-

      - name: "Run Pint"
        run: composer run pint

      - uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: '[ci-review] code fixer'
          commit_author: 'GitHub Action <actions@github.com>'
          commit_user_email: 'action@github.com'
          file_pattern: '*.php'

  tests:
    runs-on: ubuntu-latest
    needs: code-quality
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}

      - uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2

      - name: Cache Vendor
        id: cache-vendor
        uses: actions/cache@v4
        with:
          path: vendor
          key: ${{ runner.os }}-vendor-${{ hashFiles('**/composer.lock') }}

      - name: Install Dependencies
        if: steps.cache-vendor.outputs.cache-hit != 'true' # Skip if cache hit
        run: composer install -q --no-interaction --no-scripts

      - name: Pest tests
        run: composer run pest -- --coverage --min=83 # should be increased with time

      - name: PHPStan
        run: composer run phpstan
